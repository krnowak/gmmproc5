#include "str.hh"

namespace Names
{

using Abstract = StaticString<'a', 'b', 's', 't', 'r', 'a', 'c', 't'>;
using Action = StaticString<'a', 'c', 't', 'i', 'o', 'n'>;
using Alias = StaticString<'a', 'l', 'i', 'a', 's'>;
using AllowNone = StaticString<'a', 'l', 'l', 'o', 'w', '-', 'n', 'o', 'n', 'e'>;
using Array = StaticString<'a', 'r', 'r', 'a', 'y'>;
using Bitfield = StaticString<'b', 'i', 't', 'f', 'i', 'e', 'l', 'd'>;
using Bits = StaticString<'b', 'i', 't', 's'>;
using CIdentifier = StaticString<'c', ':', 'i', 'd', 'e', 'n', 't', 'i', 'f', 'i', 'e', 'r'>;
using CIdentifierPrefixes = StaticString<'c', ':', 'i', 'd', 'e', 'n', 't', 'i', 'f', 'i', 'e', 'r', '-', 'p', 'r', 'e', 'f', 'i', 'x', 'e', 's'>;
using CInclude = StaticString<'c', ':', 'i', 'n', 'c', 'l', 'u', 'd', 'e'>;
using CPrefix = StaticString<'c', ':', 'p', 'r', 'e', 'f', 'i', 'x'>;
using CSymbolPrefix = StaticString<'c', ':', 's', 'y', 'm', 'b', 'o', 'l', '-', 'p', 'r', 'e', 'f', 'i', 'x'>;
using CSymbolPrefixes = StaticString<'c', ':', 's', 'y', 'm', 'b', 'o', 'l', '-', 'p', 'r', 'e', 'f', 'i', 'x', 'e', 's'>;
using CType = StaticString<'c', ':', 't', 'y', 'p', 'e'>;
using Callback = StaticString<'c', 'a', 'l', 'l', 'b', 'a', 'c', 'k'>;
using CallerAllocates = StaticString<'c', 'a', 'l', 'l', 'e', 'r', '-', 'a', 'l', 'l', 'o', 'c', 'a', 't', 'e', 's'>;
using Class = StaticString<'c', 'l', 'a', 's', 's'>;
using Closure = StaticString<'c', 'l', 'o', 's', 'u', 'r', 'e'>;
using Constant = StaticString<'c', 'o', 'n', 's', 't', 'a', 'n', 't'>;
using Construct = StaticString<'c', 'o', 'n', 's', 't', 'r', 'u', 'c', 't'>;
using ConstructOnly = StaticString<'c', 'o', 'n', 's', 't', 'r', 'u', 'c', 't', '-', 'o', 'n', 'l', 'y'>;
using Constructor = StaticString<'c', 'o', 'n', 's', 't', 'r', 'u', 'c', 't', 'o', 'r'>;
using Deprecated = StaticString<'d', 'e', 'p', 'r', 'e', 'c', 'a', 't', 'e', 'd'>;
using DeprecatedVersion = StaticString<'d', 'e', 'p', 'r', 'e', 'c', 'a', 't', 'e', 'd', '-', 'v', 'e', 'r', 's', 'i', 'o', 'n'>;
using Destroy = StaticString<'d', 'e', 's', 't', 'r', 'o', 'y'>;
using Detailed = StaticString<'d', 'e', 't', 'a', 'i', 'l', 'e', 'd'>;
using Direction = StaticString<'d', 'i', 'r', 'e', 'c', 't', 'i', 'o', 'n'>;
using Disguised = StaticString<'d', 'i', 's', 'g', 'u', 'i', 's', 'e', 'd'>;
using Doc = StaticString<'d', 'o', 'c'>;
using DocDeprecated = StaticString<'d', 'o', 'c', '-', 'd', 'e', 'p', 'r', 'e', 'c', 'a', 't', 'e', 'd'>;
using DocVersion = StaticString<'d', 'o', 'c', '-', 'v', 'e', 'r', 's', 'i', 'o', 'n'>;
using Enumeration = StaticString<'e', 'n', 'u', 'm', 'e', 'r', 'a', 't', 'i', 'o', 'n'>;
using Field = StaticString<'f', 'i', 'e', 'l', 'd'>;
using FixedSize = StaticString<'f', 'i', 'x', 'e', 'd', '-', 's', 'i', 'z', 'e'>;
using Foreign = StaticString<'f', 'o', 'r', 'e', 'i', 'g', 'n'>;
using Function = StaticString<'f', 'u', 'n', 'c', 't', 'i', 'o', 'n'>;
using GlibBoxed = StaticString<'g', 'l', 'i', 'b', ':', 'b', 'o', 'x', 'e', 'd'>;
using GlibErrorDomain = StaticString<'g', 'l', 'i', 'b', ':', 'e', 'r', 'r', 'o', 'r', '-', 'd', 'o', 'm', 'a', 'i', 'n'>;
using GlibFundamental = StaticString<'g', 'l', 'i', 'b', ':', 'f', 'u', 'n', 'd', 'a', 'm', 'e', 'n', 't', 'a', 'l'>;
using GlibGetType = StaticString<'g', 'l', 'i', 'b', ':', 'g', 'e', 't', '-', 't', 'y', 'p', 'e'>;
using GlibIsGtypeStructFor = StaticString<'g', 'l', 'i', 'b', ':', 'i', 's', '-', 'g', 't', 'y', 'p', 'e', '-', 's', 't', 'r', 'u', 'c', 't', '-', 'f', 'o', 'r'>;
using GlibName = StaticString<'g', 'l', 'i', 'b', ':', 'n', 'a', 'm', 'e'>;
using GlibNick = StaticString<'g', 'l', 'i', 'b', ':', 'n', 'i', 'c', 'k'>;
using GlibSignal = StaticString<'g', 'l', 'i', 'b', ':', 's', 'i', 'g', 'n', 'a', 'l'>;
using GlibTypeName = StaticString<'g', 'l', 'i', 'b', ':', 't', 'y', 'p', 'e', '-', 'n', 'a', 'm', 'e'>;
using GlibTypeStruct = StaticString<'g', 'l', 'i', 'b', ':', 't', 'y', 'p', 'e', '-', 's', 't', 'r', 'u', 'c', 't'>;
using Implements = StaticString<'i', 'm', 'p', 'l', 'e', 'm', 'e', 'n', 't', 's'>;
using Include = StaticString<'i', 'n', 'c', 'l', 'u', 'd', 'e'>;
using InstanceParameter = StaticString<'i', 'n', 's', 't', 'a', 'n', 'c', 'e', '-', 'p', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r'>;
using Interface = StaticString<'i', 'n', 't', 'e', 'r', 'f', 'a', 'c', 'e'>;
using Introspectable = StaticString<'i', 'n', 't', 'r', 'o', 's', 'p', 'e', 'c', 't', 'a', 'b', 'l', 'e'>;
using Invoker = StaticString<'i', 'n', 'v', 'o', 'k', 'e', 'r'>;
using Length = StaticString<'l', 'e', 'n', 'g', 't', 'h'>;
using Member = StaticString<'m', 'e', 'm', 'b', 'e', 'r'>;
using Method = StaticString<'m', 'e', 't', 'h', 'o', 'd'>;
using MovedTo = StaticString<'m', 'o', 'v', 'e', 'd', '-', 't', 'o'>;
using Name = StaticString<'n', 'a', 'm', 'e'>;
using Namespace = StaticString<'n', 'a', 'm', 'e', 's', 'p', 'a', 'c', 'e'>;
using NoHooks = StaticString<'n', 'o', '-', 'h', 'o', 'o', 'k', 's'>;
using NoRecurse = StaticString<'n', 'o', '-', 'r', 'e', 'c', 'u', 'r', 's', 'e'>;
using Nullable = StaticString<'n', 'u', 'l', 'l', 'a', 'b', 'l', 'e'>;
using Optional = StaticString<'o', 'p', 't', 'i', 'o', 'n', 'a', 'l'>;
using Package = StaticString<'p', 'a', 'c', 'k', 'a', 'g', 'e'>;
using Parameter = StaticString<'p', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r'>;
using Parameters = StaticString<'p', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 's'>;
using Parent = StaticString<'p', 'a', 'r', 'e', 'n', 't'>;
using Prerequisite = StaticString<'p', 'r', 'e', 'r', 'e', 'q', 'u', 'i', 's', 'i', 't', 'e'>;
using Private = StaticString<'p', 'r', 'i', 'v', 'a', 't', 'e'>;
using Property = StaticString<'p', 'r', 'o', 'p', 'e', 'r', 't', 'y'>;
using Readable = StaticString<'r', 'e', 'a', 'd', 'a', 'b', 'l', 'e'>;
using Record = StaticString<'r', 'e', 'c', 'o', 'r', 'd'>;
using Repository = StaticString<'r', 'e', 'p', 'o', 's', 'i', 't', 'o', 'r', 'y'>;
using ReturnValue = StaticString<'r', 'e', 't', 'u', 'r', 'n', '-', 'v', 'a', 'l', 'u', 'e'>;
using Scope = StaticString<'s', 'c', 'o', 'p', 'e'>;
using ShadowedBy = StaticString<'s', 'h', 'a', 'd', 'o', 'w', 'e', 'd', '-', 'b', 'y'>;
using Shadows = StaticString<'s', 'h', 'a', 'd', 'o', 'w', 's'>;
using SharedLibrary = StaticString<'s', 'h', 'a', 'r', 'e', 'd', '-', 'l', 'i', 'b', 'r', 'a', 'r', 'y'>;
using Skip = StaticString<'s', 'k', 'i', 'p'>;
using Throws = StaticString<'t', 'h', 'r', 'o', 'w', 's'>;
using TransferOwnership = StaticString<'t', 'r', 'a', 'n', 's', 'f', 'e', 'r', '-', 'o', 'w', 'n', 'e', 'r', 's', 'h', 'i', 'p'>;
using Type = StaticString<'t', 'y', 'p', 'e'>;
using Union = StaticString<'u', 'n', 'i', 'o', 'n'>;
using Value = StaticString<'v', 'a', 'l', 'u', 'e'>;
using Varargs = StaticString<'v', 'a', 'r', 'a', 'r', 'g', 's'>;
using Version = StaticString<'v', 'e', 'r', 's', 'i', 'o', 'n'>;
using VirtualMethod = StaticString<'v', 'i', 'r', 't', 'u', 'a', 'l', '-', 'm', 'e', 't', 'h', 'o', 'd'>;
using When = StaticString<'w', 'h', 'e', 'n'>;
using Writable = StaticString<'w', 'r', 'i', 't', 'a', 'b', 'l', 'e'>;
using XmlSpace = StaticString<'x', 'm', 'l', ':', 's', 'p', 'a', 'c', 'e'>;
using Xmlns = StaticString<'x', 'm', 'l', 'n', 's'>;
using XmlnsC = StaticString<'x', 'm', 'l', 'n', 's', ':', 'c'>;
using XmlnsGlib = StaticString<'x', 'm', 'l', 'n', 's', ':', 'g', 'l', 'i', 'b'>;
using ZeroTerminated = StaticString<'z', 'e', 'r', 'o', '-', 't', 'e', 'r', 'm', 'i', 'n', 'a', 't', 'e', 'd'>;

} // namespace Names
